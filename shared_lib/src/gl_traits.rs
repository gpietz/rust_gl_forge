use anyhow::Result;

//////////////////////////////////////////////////////////////////////////////
// - Bindable -
//////////////////////////////////////////////////////////////////////////////

pub trait Bindable {
    fn bind(&self) -> Result<()>;
    fn unbind(&self) -> Result<()>;
    fn is_bound(&self) -> Result<bool>;
}

//////////////////////////////////////////////////////////////////////////////
// - Deletable -
//////////////////////////////////////////////////////////////////////////////

pub trait Deletable {
    fn delete(&mut self) -> Result<()>;
}

//////////////////////////////////////////////////////////////////////////////
// - ToOpenGL -
//////////////////////////////////////////////////////////////////////////////

pub trait ToOpenGL {
    fn to_opengl(&self) -> u32;
}

//////////////////////////////////////////////////////////////////////////////
// - ToOpenGLenum -
//////////////////////////////////////////////////////////////////////////////

pub trait ToOpenGLenum {
    fn to_opengl_enum(&self) -> gl::types::GLenum;
}
